// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;

namespace backend.Migrations
{
    [DbContext(typeof(WUNContext))]
    [Migration("20210618185435_V6")]
    partial class V6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backend.Models.Obavestenje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorID")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tekst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ZgradaRefID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("ZgradaRefID");

                    b.ToTable("Obavestenje");
                });

            modelBuilder.Entity("backend.Models.Poruka", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorID")
                        .HasColumnType("int");

                    b.Property<string>("Tekst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ZgradaRefID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("ZgradaRefID");

                    b.ToTable("Poruka");
                });

            modelBuilder.Entity("backend.Models.Predlog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrProtiv")
                        .HasColumnType("int");

                    b.Property<int>("BrZa")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumObjave")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZgradaRefID")
                        .HasColumnType("int");

                    b.Property<int>("idAutora")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ZgradaRefID");

                    b.ToTable("Predlog");
                });

            modelBuilder.Entity("backend.Models.Racun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumPlacanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("Godina")
                        .HasColumnType("int");

                    b.Property<int>("Iznos")
                        .HasColumnType("int");

                    b.Property<string>("Mesec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StanRefID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("StanRefID");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("backend.Models.Sastanak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrNezainteresovasnih")
                        .HasColumnType("int");

                    b.Property<int>("BrZainteresovanih")
                        .HasColumnType("int");

                    b.Property<string>("Mesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Povod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ZgradaRefID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ZgradaRefID");

                    b.ToTable("Sastanak");
                });

            modelBuilder.Entity("backend.Models.Stan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrStana")
                        .HasColumnType("int");

                    b.Property<int>("IznosDugovanja")
                        .HasColumnType("int");

                    b.Property<int?>("ZgradaRefID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ZgradaRefID");

                    b.ToTable("Stan");
                });

            modelBuilder.Entity("backend.Models.Stanar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrSprata")
                        .HasColumnType("int");

                    b.Property<int>("BrStana")
                        .HasColumnType("int");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jmbg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StanRefID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZgradaRefID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("StanRefID");

                    b.HasIndex("ZgradaRefID");

                    b.ToTable("Stanar");
                });

            modelBuilder.Entity("backend.Models.StanarGlasaoProtivPredloga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PredlogId")
                        .HasColumnType("int");

                    b.Property<int>("StanarId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("StanarGlasaoProtivPredloga");
                });

            modelBuilder.Entity("backend.Models.StanarGlasaoZaPredlog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PredlogId")
                        .HasColumnType("int");

                    b.Property<int>("StanarId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("StanarGlasaoZaPredlog");
                });

            modelBuilder.Entity("backend.Models.StanarNeZaSastanak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SastanakId")
                        .HasColumnType("int");

                    b.Property<int>("StanarId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("StanarNeZaSastanak");
                });

            modelBuilder.Entity("backend.Models.StanarZaSastanak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SastanakId")
                        .HasColumnType("int");

                    b.Property<int>("StanarId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("StanarZaSastanak");
                });

            modelBuilder.Entity("backend.Models.StavkaOglasneTable", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AutorID")
                        .HasColumnType("int");

                    b.Property<string>("Tekst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ZgradaRefID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("ZgradaRefID");

                    b.ToTable("StavkaOglasneTable");
                });

            modelBuilder.Entity("backend.Models.Zgrada", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SifraZgrade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Zgrada");
                });

            modelBuilder.Entity("backend.Models.Obavestenje", b =>
                {
                    b.HasOne("backend.Models.Stanar", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorID");

                    b.HasOne("backend.Models.Zgrada", "ZgradaRef")
                        .WithMany("ObavestenjaRef")
                        .HasForeignKey("ZgradaRefID");

                    b.Navigation("Autor");

                    b.Navigation("ZgradaRef");
                });

            modelBuilder.Entity("backend.Models.Poruka", b =>
                {
                    b.HasOne("backend.Models.Stanar", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorID");

                    b.HasOne("backend.Models.Zgrada", "ZgradaRef")
                        .WithMany("Cet")
                        .HasForeignKey("ZgradaRefID");

                    b.Navigation("Autor");

                    b.Navigation("ZgradaRef");
                });

            modelBuilder.Entity("backend.Models.Predlog", b =>
                {
                    b.HasOne("backend.Models.Zgrada", "ZgradaRef")
                        .WithMany("PredloziRef")
                        .HasForeignKey("ZgradaRefID");

                    b.Navigation("ZgradaRef");
                });

            modelBuilder.Entity("backend.Models.Racun", b =>
                {
                    b.HasOne("backend.Models.Stan", "StanRef")
                        .WithMany("RacuniRef")
                        .HasForeignKey("StanRefID");

                    b.Navigation("StanRef");
                });

            modelBuilder.Entity("backend.Models.Sastanak", b =>
                {
                    b.HasOne("backend.Models.Zgrada", "ZgradaRef")
                        .WithMany("SastanciRef")
                        .HasForeignKey("ZgradaRefID");

                    b.Navigation("ZgradaRef");
                });

            modelBuilder.Entity("backend.Models.Stan", b =>
                {
                    b.HasOne("backend.Models.Zgrada", "ZgradaRef")
                        .WithMany("StanoviRef")
                        .HasForeignKey("ZgradaRefID");

                    b.Navigation("ZgradaRef");
                });

            modelBuilder.Entity("backend.Models.Stanar", b =>
                {
                    b.HasOne("backend.Models.Stan", "StanRef")
                        .WithMany("StanariRef")
                        .HasForeignKey("StanRefID");

                    b.HasOne("backend.Models.Zgrada", "ZgradaRef")
                        .WithMany("StanariRef")
                        .HasForeignKey("ZgradaRefID");

                    b.Navigation("StanRef");

                    b.Navigation("ZgradaRef");
                });

            modelBuilder.Entity("backend.Models.StavkaOglasneTable", b =>
                {
                    b.HasOne("backend.Models.Stanar", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorID");

                    b.HasOne("backend.Models.Zgrada", "ZgradaRef")
                        .WithMany("OglasnaTablaRef")
                        .HasForeignKey("ZgradaRefID");

                    b.Navigation("Autor");

                    b.Navigation("ZgradaRef");
                });

            modelBuilder.Entity("backend.Models.Stan", b =>
                {
                    b.Navigation("RacuniRef");

                    b.Navigation("StanariRef");
                });

            modelBuilder.Entity("backend.Models.Zgrada", b =>
                {
                    b.Navigation("Cet");

                    b.Navigation("ObavestenjaRef");

                    b.Navigation("OglasnaTablaRef");

                    b.Navigation("PredloziRef");

                    b.Navigation("SastanciRef");

                    b.Navigation("StanariRef");

                    b.Navigation("StanoviRef");
                });
#pragma warning restore 612, 618
        }
    }
}
